using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class EnemySpawner : MonoBehaviour {
    public GameObject enemyPrefab;
    public float width = 10f;
    public float height = 5f;
    public float speed = 5f;
    public float spawnDelay = 0.5f;

    private bool movingRight = true;
    private float xmax;
    private float xmin;


	// Use this for initialization
	void Start () {
        SetBoundary();
        SpawnUntilFull();
	}

    // Update is called once per frame
    void Update () {
        EnemyMovement();
        InBounds();

        if (AllMembersDead())
        {
            SpawnUntilFull();
        }
    }

    // Displays the enemy formation in Scene editor
    public void OnDrawGizmos()
    {
        Gizmos.DrawWireCube(transform.position, new Vector3(width, height, 0f));
    }

    // This method spawns in enemy formations
   /* void SpawnFormation()
    {
        foreach (Transform child in transform)
        {
            GameObject enemy = Instantiate(enemyPrefab, child.transform.position, Quaternion.identity) as GameObject;
            enemy.transform.parent = child;
        }
    }
    */

    // Spawns enemies until the formation is full
    void SpawnUntilFull()
    {
        Transform freePosition = NextFreePosition();
        if (freePosition)
        {
            GameObject enemy = Instantiate(enemyPrefab, freePosition.position, Quaternion.identity) as GameObject;
            enemy.transform.parent = freePosition;
        }

        if (NextFreePosition())
        {
            Invoke("SpawnUntilFull", spawnDelay);
        }
    }

    // Determines enemy movement
    void EnemyMovement()
    {
        if (movingRight)
        {
            transform.position += Vector3.right * speed * Time.deltaTime;
        }
        else
        {
            transform.position += Vector3.left * speed * Time.deltaTime;
        }

    }

    // Determines screen bounds for enemy formation
    void SetBoundary()
    {
        float distanceToCamera = transform.position.z - Camera.main.transform.position.z;
        Vector3 leftBoundary = Camera.main.ViewportToWorldPoint(new Vector3(0, 0, distanceToCamera));
        Vector3 rightBoundary = Camera.main.ViewportToWorldPoint(new Vector3(1, 0, distanceToCamera));
        xmax = rightBoundary.x;
        xmin = leftBoundary.x;
    }

    // Restricts enemies to the play area
    void InBounds()
    {
        float rightEdgeOfFormation = transform.position.x + (0.45f * width);
        float leftEdgeOfFormation = transform.position.x - (0.45f * width);
        if (leftEdgeOfFormation < xmin )
        {
            movingRight = true;
        }
        else if (rightEdgeOfFormation > xmax)
        {
            movingRight = false;
        }
    }

    // Checks to see if all enemies on screen are destroyed
    bool AllMembersDead(){
        for (int i = 0; i < transform.childCount; i++)
        {
            if (transform.GetChild(i).childCount > 0) return false;
        }
        return true;
        }

    // Enter what this does
    Transform NextFreePosition()
    {
        Transform result = null;

        foreach (Transform childPositionGameObject in transform)
        {
            if (childPositionGameObject.childCount == 0)
            {
                result = childPositionGameObject;    // populates the result variable with the valid Transform
                break;    // exits the foreach loop
            }
        }

        return result;
    }
}
