using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerController : MonoBehaviour {
    public float speed = 12.5f;
    public float padding = 1;
    public GameObject projectile;
    public float projectileSpeed = 0;
    public float firingRate = 0.2f;
    public float health = 200f;
    public GameObject explosion;
    public AudioClip fireSound;
    public AudioClip deathSound;

    float xmin;
    float xmax;

	// Use this for initialization
	void Start () {
        SetBoundary();
    }
	
	// Update is called once per frame
	void Update () {
        MovePlayer();
        if (Input.GetKeyDown(KeyCode.Space))
        {
            InvokeRepeating("FireProjectile", 0.000001f, firingRate);
        }
        if (Input.GetKeyUp(KeyCode.Space))
        {
            CancelInvoke("FireProjectile");
        }
	}

    // Sets the screen boundaries 
    void SetBoundary()
    {
        float distance = transform.position.z - Camera.main.transform.position.z;
        Vector3 leftMost = Camera.main.ViewportToWorldPoint(new Vector3(0, 0, distance));
        Vector3 rightMost = Camera.main.ViewportToWorldPoint(new Vector3(1, 0, distance));
        xmin = leftMost.x + padding;
        xmax = rightMost.x - padding;
    }

    // Controls the movement of the player
    void MovePlayer()
    {
        if (Input.GetKey(KeyCode.LeftArrow))
        {
            //transform.position += new Vector3(-speed * Time.deltaTime, 0f, 0f);
            transform.position += Vector3.left * speed * Time.deltaTime;
        }
        else if (Input.GetKey(KeyCode.RightArrow))
        {
            //transform.position += new Vector3(speed * Time.deltaTime, 0f, 0f);
            transform.position += Vector3.right * speed * Time.deltaTime;
        }

        // Restrict player to the play area 
        float newX = Mathf.Clamp(transform.position.x, xmin, xmax);
        transform.position = new Vector3(newX, transform.position.y, transform.position.z);
    }

    // Fires player lasers
    void FireProjectile()
    {
        Vector3 offset = new Vector3(0f, 0.5f, 0f);
        GameObject laser = Instantiate
        (projectile, transform.position+offset, Quaternion.identity) as GameObject;
        laser.GetComponent<Rigidbody2D>().velocity = new Vector3(0, projectileSpeed, 0);
        AudioSource.PlayClipAtPoint(fireSound, transform.position);
    }

    // Damages player when hit by projectile
    // Destroys player if health is <= 0
    void OnTriggerEnter2D(Collider2D collider)
    {
        Projectile missile = collider.gameObject.GetComponent<Projectile>();
        if (missile)
        {
            health -= missile.GetDamage();
            missile.Hit();
            if (health <= 0)
            {
                Explode();
                Destroy(gameObject);
            }
        }
    }

    // Executes an explosion effect when player is destroyed
    void Explode()
    {
        GameObject starBurst = Instantiate(explosion, transform.position, Quaternion.identity);
        ParticleSystem.MainModule main = starBurst.GetComponent<ParticleSystem>().main; main.startColor = GetComponent<SpriteRenderer>().color;
        Instantiate(explosion, gameObject.transform.position, Quaternion.identity);
        AudioSource.PlayClipAtPoint(deathSound, transform.position);
    }
}
